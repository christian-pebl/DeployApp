rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Function to check if a user is the owner of a document being written.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Function to check if the project being read is shared.
    // It queries the 'shares' collection to see if a document exists
    // that points to the given projectId.
    function isProjectShared(projectId) {
      return exists(
        /databases/$(database)/documents/shares/$(projectId)
      ) || 
      query.get(
        /databases/$(database)/documents/shares, 
        query.where("projectId", "==", projectId).limit(1)
      ).size > 0;
    }

    // A user can create a document if they are the owner.
    // They can read, update, or delete it if they are the owner.
    // Another user can read it if the project is shared.
    match /projects/{projectId} {
      allow read: if isOwner(resource.data.userId) || isProjectShared(projectId);
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isOwner(resource.data.userId);
    }
    match /pins/{pinId} {
      allow read: if isOwner(resource.data.userId) || isProjectShared(resource.data.projectId);
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isOwner(resource.data.userId);
    }
    match /lines/{lineId} {
      allow read: if isOwner(resource.data.userId) || isProjectShared(resource.data.projectId);
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isOwner(resource.data.userId);
    }
    match /areas/{areaId} {
      allow read: if isOwner(resource.data.userId) || isProjectShared(resource.data.projectId);
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isOwner(resource.data.userId);
    }

    // Rules for sharing projects.
    match /shares/{shareId} {
      // Anyone who is logged in can read a share document to import it.
      allow read: if request.auth != null;
      
      // A user can only create a share code for a project they own.
      // This rule looks up the project being shared and verifies ownership.
      allow create: if isOwner(get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.userId);
      
      // Shares are immutable; they cannot be changed or deleted.
      allow update, delete: if false;
    }
  }
}
