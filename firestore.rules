rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check project ownership
    function isProjectOwner(projectId, userId) {
      return get(/databases/$(database)/documents/projects/$(projectId)).data.userId == userId;
    }

    // Projects can only be accessed by their owner
    match /projects/{projectId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Pins, Lines, Areas, and Tags can only be accessed by their owner
    match /{collection}/{docId} where collection in ['pins', 'lines', 'areas', 'tags'] {
       allow read, update, delete: if request.auth.uid == resource.data.userId;
       allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Rules for the 'shares' collection
    match /shares/{shareId} {
      // Any authenticated user can read a share document to import it.
      allow read: if request.auth != null;

      // A user can create a share document if:
      // 1. They are authenticated.
      // 2. The `userId` in the new document matches their own.
      // 3. They are the owner of the project being shared.
      allow create: if request.auth != null &&
                       request.resource.data.userId == request.auth.uid &&
                       isProjectOwner(request.resource.data.projectId, request.auth.uid);

      // Shares are immutable and cannot be updated or deleted by clients.
      allow update, delete: if false;
    }
    
    // Rules for the 'shares_by_project' lookup table. This is mainly to prevent race conditions.
    match /shares_by_project/{projectId} {
        // Any authenticated user can read this.
        allow read: if request.auth != null;

        // A user can create a share_by_project link if they own the project.
        allow create: if request.auth != null && isProjectOwner(projectId, request.auth.uid);
        
        // Cannot be updated or deleted by clients.
        allow update, delete: if false;
    }
  }
}