rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if a project has been shared
    function isShared(projectId) {
      return exists(/databases/$(database)/documents/shares_by_project/$(projectId));
    }

    // Projects can be read if owned or if shared. Can be written if owned.
    match /projects/{projectId} {
      allow read: if isOwner(resource.data.userId) || isShared(projectId);
      allow write: if isOwner(request.resource.data.userId);
      allow delete: if isOwner(resource.data.userId);
    }

    // Pins, Lines, Areas, and Tags can be read if the user owns the project
    // or if the project has been shared. They can be written if the user owns them.
    match /{collection}/{docId} {
      allow read: if isOwner(resource.data.userId) || isShared(resource.data.projectId);
      allow write: if isOwner(request.resource.data.userId);
      allow delete: if isOwner(resource.data.userId);
    }
    
    // Any authenticated user can create or read a share document
    match /shares/{shareId} {
        allow read, create: if request.auth != null;
    }
    
    // Allow the creation of a lookup document when a project is shared.
    // This is used by the security rules to check if a project is shared.
    match /shares_by_project/{projectId} {
        allow create: if request.auth != null;
    }
  }
}
